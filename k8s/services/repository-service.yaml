# Expose the service to be available
apiVersion: v1
kind: Service
metadata:
  name: repository-service
  labels:
    app: repository
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: repository
---
# Control the rollout, and replication of the service's pods
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: repository-deployment
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: repository
    spec:
      volumes:
      - name: repository-pv-storage
        persistentVolumeClaim:
         claimName: repository-pv-claim
      containers:
      - name: repository
        image: 192.168.99.1:5000/platformer/repository:latest
        livenessProbe:
          httpGet:
            path: /config/hello-world/hello-world.config
            port: 80
            scheme: HTTP
        ports:
        - containerPort: 80
#        volumeMounts:
#        - mountPath: "/usr/share/nginx/html"
#          name: repository-pv-storage
#---
#kind: PersistentVolume
#apiVersion: v1
#metadata:
#  name: repository-pv-volume
#  labels:
#    type: local
#spec:
#  storageClassName: manual
#  capacity:
#    storage: 500Mi
#  accessModes:
#    - ReadWriteOnce
#  hostPath:
#    path: "/usr/share/nginx/html"
#---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: repository-pv-claim
#spec:
#  storageClassName: manual
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 500Mi